# -*- coding: utf-8 -*-
"""social-network-ads.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ry1lp31zGJy2vxW3eycy7Ri6fWMn6qeJ
"""

import numpy as np
import pandas as pd

ads = pd.read_csv("/content/social-network-ads.csv")

ads.head()

ads.shape

ads.isnull().sum()

ads.duplicated().sum()

ads.describe()

ads['Gender'] = ads['Gender'].map({'Male': 1, 'Female': 0})

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(ads.drop(['User ID', 'Purchased'], axis=1),ads['Purchased'], test_size=0.2, random_state=2)

X_train.shape

X_test.shape

"""Scalling"""

from sklearn.preprocessing import StandardScaler

scalar = StandardScaler()

scalar.fit(X_train)
X_train = scalar.transform(X_train)
X_test = scalar.transform(X_test)

X_train

# Training models

from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

models = {
    "lg": LogisticRegression(),
    "dtc": DecisionTreeClassifier(),
    "rtc": RandomForestClassifier(),
    "gnb": GaussianNB()
}

for name, algo in models.items():
  algo.fit(X_train, y_train)
  y_pred = algo.predict(X_test)

  print(f"{name} with accuracy {accuracy_score(y_test, y_pred)}")

rfc = RandomForestClassifier()
rfc.fit(X_train, y_train)
y_pred = rfc.predict(X_test)
accuracy_score(y_test, y_pred)

X_train[10]

input_text = (-0.97530483,  1.7580637 ,  1.0213469 )
input_np_text = np.asarray(input_text)
prediction = rfc.predict(input_np_text.reshape(1, -1))
if prediction == 1:
  print("purchased")
else:
  print("Not Purchased")